@model cspv3.ViewModels.ShoppingCartViewModel
@{
    ViewData["Title"] = "Domain Configuration & Checkout";
    var cycle = ViewBag.BillingCycle as string;

    //Layout = null;
}


<script type="text/javascript" src="https://www.firstchekout.com/first-checkout.v1.0.min.js"></script>

<script type="text/javascript">

     function stringGen(len) {
        var text = "";
        var charset = "abcdefghijklmnopqrstuvwxyz0123456789";
        for (var i = 0; i < len; i++)
            text += charset.charAt(Math.floor(Math.random() * charset.length));
        return "FCC"+text;
    }

    $(document).ready(function () {
                         var cycle = '@cycle';

        var dom = $('#DomainVal').val();
        if (dom.length > 1) {
            $('#summary').show();
            $("#domainPartition").hide();

        }
        else {
            $("#checkdomain").click(function () {
                $('#queryresponse').html('<img src="/img/gif/loader.gif">');
                var domain = ".onmicrosoft.com";
                var domainPrefix = $('#checkdomainvalue').val() + domain;

                $.ajax({
                    url: 'https://smeproductivitycsbapi.azurewebsites.net/api/v3/utility/isdomainavailable?domainPrefix=' + domainPrefix,

                    type: 'POST',
                    data: '',
                    contentType: "application/json;charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        var result = data;

                        if (result == true) {

                            setTimeout(function () {
                                $('#queryresponse').empty().removeClass().addClass('text-success').append('Subdomain Name is Available, Please click on the checkout link to view your order summary and proceed with payment');
                            });
                            $('#chsummary').show();

                        } else {
                            $('#queryresponse').empty().removeClass().addClass('text-danger').append('Opps Subdomain Name not Available please try again');
                            $('#chsummary').hide();
                        }

                    },

                    failure: function (data) {
                        console.log(data.responseText);
                    },

                    error: function (data) {
                        console.log(data.responseText);
                    }
                });
            });

            $("#chsummary").click(function () {
                $('#checkdomainvalue').attr("disabled", true);
                $('#checkdomain').attr("disabled", true);
                $('#summary').show();

            });
        }

            $("#submitModel").click(function () {

                if ($('#TermBox').prop('checked')) {


            var method =  $( "#payMeth option:selected" ).text();

            console.log(method);
            if (method === "Paystack") {
            var token = $('[name=__RequestVerificationToken]').val();

                  //  console.log(token);

                var customerPaymentModel = {};
                customerPaymentModel.FirstName = $('#FirstName').val();
                customerPaymentModel.LastName = $('#LastName').val();
                customerPaymentModel.CompanyName = $('#CompanyName').val();
                customerPaymentModel.Email = $('#Email').val();
                customerPaymentModel.Phone = $('#PhoneNumber').val();
                customerPaymentModel.CompanyAddress = $('#CompanyAddress').val();
                customerPaymentModel.BillingCycle = '@cycle';
                if (dom.length > 1) {
                    customerPaymentModel.Domain = dom;
                }
                else {
                    customerPaymentModel.Domain = $('#checkdomainvalue').val() + '.onmicrosoft.com';

                }
                   var ma = (@Convert.ToInt64(Model.CartTotal));

                      var na = (@(Convert.ToInt64(Model.CartTotal)) * 0.05);
                var totals = ma + na;

                 if (cycle == "Annual") {
                    totals = totals - (totals * 0.15);
                } if (cycle == "BiAnnual" || cycle == "Quarterly") {
                    totals = totals - (totals * 0.1);
                } if (cycle == "Monthly") {
                    totals = totals - (totals * 0.05);
                } 

                customerPaymentModel.payment = totals;
                console.log(customerPaymentModel);

                $.ajax({
                    url: '@Url.Action("PayStackCheckout","Checkout")',
                    method: 'POST',
                    headers: {
                        'RequestVerificationToken': token,

                    },
                    data: customerPaymentModel,

                    success: function (returndata) {
                        if (returndata.isSuccess) {
                            window.location = returndata.redirectUrl;
                        }
                    }

                    });
            }
             if (method === "FirstCheckout") {
         var token = $('[name=__RequestVerificationToken]').val();

                  //  console.log(token);
                var ref = stringGen(8);


                var FCHPaymentModel = {};
                FCHPaymentModel.FirstName = $('#FirstName').val();
                FCHPaymentModel.LastName = $('#LastName').val();
                FCHPaymentModel.CompanyName = $('#CompanyName').val();
                FCHPaymentModel.Email = $('#Email').val();
                FCHPaymentModel.Phone = $('#PhoneNumber').val();
                 FCHPaymentModel.CompanyAddress = $('#CompanyAddress').val();
                 FCHPaymentModel.Reference = ref;

                  FCHPaymentModel.BillingCycle = '@cycle';

                if (dom.length > 1) {
                    FCHPaymentModel.Domain = dom;
                }
                else {
                    FCHPaymentModel.Domain = $('#checkdomainvalue').val() + '.onmicrosoft.com';

                 }
                    var m = (@Convert.ToInt64(Model.CartTotal));

                      var n = (@(Convert.ToInt64(Model.CartTotal)) * 0.05);
                 var total = m + n;

                 if (cycle == "Annual") {
                    total = total - (total * 0.15);
                } if (cycle == "BiAnnual" || cycle == "Quarterly") {
                    total = total - (total * 0.1);
                } if (cycle == "Monthly") {
                    total = total - (total * 0.05);
                } 
                 FCHPaymentModel.payment = total;
                console.log(FCHPaymentModel);

                $.ajax({
                    url: '@Url.Action("FCHCheckout","Checkout")',
                    method: 'POST',
                    headers: {
                        'RequestVerificationToken': token,

                    },
                    data: FCHPaymentModel,

                    success: function (returndata) {
                           
                            console.log(returndata);

                        var payload = {
                            amount: total * 100,

                                description: 'Payment from Wragby CSP Platform',
                                merchant_key: 'x5UWyrYHTuXBa8oAHhaGe1Y2kfyBV1RjqrSbYDNPP5B2OTDjwH',

                            test_mode: false, // set to true for demo 
                                transaction_reference: ref,
                                email: FCHPaymentModel.Email,
                                redirect_url: 'https://csp.wragbysolutions.com/checkout/FCHordercompleted',
                                onSuccess: function (data) {
                                   

                                },
                                onError: function (data) {
                                   

                                },
                                onCancel: function () {
                                    // Cancel Callback
                                }
                            };


                            FirstCheckout.configure(payload);
                         //    FirstCheckout.showLightbox();
                           FirstCheckout.showPaymentPage();


                        }

                    });
            }


        

                  
                }
                else {

                    alert("Accept Terms and Conditions");

                    // something else when not
                }
            });


        });


</script>
<section id="page-title" class="help">
    <div class="container">
        <div class="page-title">
            <h1>Checkout</h1>
            <span>Checkout details</span>
        </div>
       

    </div>
</section>

<div class="empty-space col-xs-b35 col-md-b70"></div>
@*<div class="seperator">
    <i class="fa fa-credit-card"></i>
</div>*@

<section id="shop-checkout">
    <div class="container">
        <div class="row">
            <div class="col-md-6 col-xs-b50 col-md-b0" id="domainPartition">
                <h4 class="h4 col-xs-b25">Configure your Tenant Domain</h4>
                <div>
                    <em>
                        Every new Office 365 user is provided with a free subdomain similar to example.onmicrosoft.com.
                        Select a subdomain you like and check if it is available.
                    </em>
                </div>
                <div class="empty-space col-xs-b20"></div>
                <label>
                    subdomain
                    <span class="required">*</span>
                </label>
                <div class="empty-space col-xs-b20"></div>
                <input type="hidden" value="@Model.User.Domain" id="DomainVal" />
                <input type="text" placeholder="" style="        width: 60%" id="checkdomainvalue" class="simple-input" required />
                <span style="        display: inline-block"> .onmicrosoft.com</span><br />
                <div class="empty-space col-xs-b20"></div>
                <em>
                    The subdomain name can contain only Latin letters and digits. It should be no more than 25 characters long.
                </em>
                <div class="empty-space col-xs-b20"></div>


                <div id="queryresponse">
                </div><br /><br />
                <div class="order-details-entry">


                    <div class="buttons-wrapper">
                        <a class="button size-2 style-2 btn" id="checkdomain">
                            <span class="button-wrapper">
                                
                                <span class="text"> Check Availability</span>
                            </span>
                        </a>
                        <a class="button size-2 style-3 btn btn-info" id="chsummary" style=" display: none;">
                            <span class="button-wrapper">
                               
                                <span class="text">Order Summary</span>
                            </span>
                        </a>
                    </div>
                </div>

            </div>


            <div class="col-md-6" id="summary" style="position:center;display:none;">
                <h4 class="upper">Your Order</h4>

                <input type="hidden" value="@Model.User.FirstName" id="FirstName" />
                <input type="hidden" value="@Model.User.LastName" id="LastName" />
                <input type="hidden" value="@Model.User.CompanyName" id="CompanyName" />
                <input type="hidden" value="@Model.User.Email" id="Email" />
                <input type="hidden" value="@Model.User.PhoneNumber" id="Phone" />
                <input type="hidden" value="@Model.User.CompanyAddress" id="CompanyAddress" />
                <div class="table table-sm table-striped table-responsive table table-bordered table-responsive">
                    <div class="cart-entry clearfix">

                        <table class="table m-b-20">
                            <thead>
                                <tr>
                                    <th class="cart-product-thumbnail">Product</th>
                                    <th class="cart-product-name">Description</th>
                                    <th class="cart-product-quantity">Quantity</th>
                                    <th class="cart-product-quantity">Unit Price</th>
                                    <th class="cart-product-subtotal">Total</th>
                                </tr>
                            </thead>
                            <tbody>

                                @for (int i = 0; i < Model.CartItems.Count(); i++)
                                {
                                    <tr>

                                        <td class="cart-product-thumbnail">
                                            <div class="cart-product-thumbnail-name">@Model.Products[i].Name</div>
                                        </td>
                                        <td class="cart-product-description">
                                            <p>
                                                <span>@Model.Products[i].Description</span>
                                            </p>
                                        </td>
                                        <td class="cart-product-quantity">
                                            <p>
                                                <span>@Model.CartItems[i].Count</span>
                                            </p>
                                        </td>
                                        <td class="cart-product-quantity">
                                            <p>
                                                <span>&#8358; @string.Format("{0:C}", (@Model.Products[i].WragbyPrice)).Remove(0, 1)</span>
                                            </p>
                                        </td>
                                        <td class="cart-product-subtotal">
                                            <span class="amount">&#8358; @string.Format("{0:C}", (@Model.CartItems[i].Count * @Model.Products[i].WragbyPrice)).Remove(0, 1)</span>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>





                    <div class="table-responsive">

                        <table class="table">
                            <tbody>
                                <tr>
                                    <td class="cart-product-name">
                                        cart subtotal / @cycle
                                    </td>
                                    <td class="cart-product-name text-right">
                                        <div class="color"> &#8358; @string.Format("{0:C}", (@Model.CartTotal)).Remove(0, 1) </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="cart-product-name">
                                        VAT 5%
                                    </td>
                                    <td class="cart-product-name  text-right">
                                        <div class="color">&#8358; @string.Format("{0:C}", ((Convert.ToInt64(@Model.CartTotal)) * 0.05)).Remove(0, 1)</div>

                                    </td>
                                </tr>
                                <tr>
                                    <td class="cart-product-name">
                                        Total Due Today
                                    </td>
                                    <td class="cart-product-name  text-right">
                                        <div class="color">
                                            <h3>
                                                &#8358;@{ var m = (Convert.ToInt64(Model.CartTotal));
                                                    var n = ((Convert.ToInt64(Model.CartTotal)) * 0.05);
                                                    var total = m + n;
                                                }
                                                @string.Format("{0:C}", @total).Remove(0, 1)
                                            </h3>

                                            @*<input type="hidden" value="@totalfinal" id="payment" />*@
                                        </div>
                                    </td>
                                </tr>
                                <tr>

                                    @if (cycle == "Monthly")
                                    {

                                        <td class="cart-product-name">
                                            <span style="color:red">Discount(5%)</span> 
                                        </td>
                                        <td class="cart-product-name text-right">
                                            <div class="color">
                                                <h3 style="color:red">
                                                    &#8358;@{ var discounttotal = total * 0.05;

                                                    }
                                                    @string.Format("{0:C}", discounttotal).Remove(0, 1)
                                                </h3>


                                            </div>
                                        </td>

                                    }
                                    @if (cycle == "Annual")
                                    {

                                        <td class="cart-product-name">
                                            Discount(15%)
                                        </td>
                                        <td class="cart-product-name text-right">
                                            <div class="color">
                                                <h3 style="color:red">
                                                    &#8358;@{ var discounttotal = total * 0.15;

                                                    }
                                                    @string.Format("{0:C}", discounttotal).Remove(0, 1)
                                                </h3>


                                            </div>
                                        </td>

                                    }
                                    @if (cycle == "BiAnnual" || cycle == "Quarterly")
                                    {

                                        <td class="cart-product-name">
                                            Discount(10%)
                                        </td>
                                        <td class="cart-product-name text-right">
                                            <div class="color">
                                                <h3 style="color:red">
                                                    &#8358;@{ var discounttotal = total * 0.1;

                                                    }
                                                    @string.Format("{0:C}", discounttotal).Remove(0, 1)
                                                </h3>


                                            </div>
                                        </td>

                                    }
                                </tr>
                                <tr>
                                    @if (cycle == "Monthly")
                                    {
                                        <td class="cart-product-name">
                                            Total Payment
                                        </td>
                                        <td class="cart-product-name text-right">
                                            <div class="color">
                                                <h3>
                                                    &#8358;@{ var totalpay = total - (total * 0.05);


                                                    }
                                                    @string.Format("{0:C}", totalpay).Remove(0, 1)
                                                </h3>


                                            </div>
                                        </td>
                                    }
                                    @if (cycle == "Annual")
                                    {

                                        <td class="cart-product-name">
                                            Total Payment
                                        </td>
                                        <td class="cart-product-name text-right">
                                            <div class="color">
                                                <h3>
                                                    &#8358;@{ var totalpay = total - (total * 0.15);


                                                    }
                                                    @string.Format("{0:C}", totalpay).Remove(0, 1)
                                                </h3>


                                            </div>
                                        </td>

                                    }
                                    @if (cycle == "BiAnnual" || cycle == "Quarterly")
                                    {

                                        <td class="cart-product-name">
                                            Total Payment
                                        </td>
                                        <td class="cart-product-name text-right">
                                            <div class="color">
                                                <h3>
                                                    &#8358;@{ var totalpay = total - (total * 0.1);


                                                    }
                                                    @string.Format("{0:C}", totalpay).Remove(0, 1)
                                                </h3>


                                            </div>
                                        </td>

                                    }
                                </tr>
                            </tbody>
                        </table>
                    </div>






                </div>
                <div class="empty-space col-xs-b50"></div>
                <h4 class="h4 col-xs-b25">payment method</h4>

                <select id="payMeth" class="SlectBox">
                    <option selected="selected">Paystack</option>
                    <option value="volvo">FirstCheckout</option>

                </select>
                <div class="empty-space col-xs-b50"></div>

                <div class="empty-space col-xs-b10"></div>
                <h4 class="h4 col-xs-b25">Billing Cycle</h4>
                <select id="BillCyc" class="SlectBox">
                    @{


                        if (cycle == "Monthly")
                        {
                            <option value="monthly" selected>Monthly</option>
                            <option value="yearly">Annual</option>
                            <option value="quarterly">Quarterly</option>
                            <option value="biannual">BiAnnual</option>


                        }
                        if (cycle == "Annual")
                        {
                            <option value="yearly" selected>Annual</option>

                            <option value="monthly">Monthly</option>
                            <option value="quarterly">Quarterly</option>
                            <option value="biannual">BiAnnual</option>
                        }
                        if (cycle == "Quarterly")
                        {
                            <option value="quarterly selected">Quarterly</option>

                            <option value="yearly">Annual</option>

                            <option value="monthly">Monthly</option>
                            <option value="biannual">BiAnnual</option>
                        }
                        if (cycle == "BiAnnual")
                        {
                            <option value="biannual selected">BiAnnual</option>

                            <option value="yearly">Annual</option>

                            <option value="monthly">Monthly</option>
                            <option value="quarterly">Quarterly</option>
                        }
                    }
                </select>
                <div class="empty-space col-xs-b10"></div>
                <div class="empty-space col-xs-b30"></div>
                <label class="checkbox-entry">
                    <input type="checkbox" id="TermBox" /><span><a asp-controller="Docs" asp-action="TermsAndConditions" target="_blank" style="color:#0d223d">Terms and Conditions agreement</a></span>
                </label>




                <input type="submit" id="submitModel" class="btn icon-left float-right mt-3" value="Place Order" />
            </div>
               
               
              
            </div>
          
        </div>
           

      
    
    
</section>



<script>

    $(document).ready(function () {


        $("#BillCyc").change(function () {
            var billing = this.options[this.selectedIndex].text;
            console.log(billing);
            if (billing === "Annual") {
                window.location.href = '@Url.Action("AnnualBilling", "Checkout")';

            }
             if (billing === "Monthly") {
                window.location.href = '@Url.Action("Index", "Checkout")';

            }
             if (billing === "Quarterly") {
                window.location.href = '@Url.Action("QuarterlyBilling", "Checkout")';

            }
             if (billing === "BiAnnual") {
                window.location.href = '@Url.Action("BiAnnualBilling", "Checkout")';

            }


        });
        });



</script>